[array([[ 0.9356258 , -2.516889  , -0.35071683],
       [-0.33033442,  0.87767744,  0.734684  ],
       [ 2.4718492 ,  3.2471542 , -0.3191799 ]], dtype=float32), array([ 0.       ,  0.       , -1.1938429], dtype=float32), array([[-0.6178112 ,  0.53960896,  0.7881688 ,  1.1532184 ],
       [-0.6354555 ,  0.8100512 , -3.5166042 , -1.2746803 ],
       [-0.649559  ,  1.0897137 ,  2.5617893 , -0.3281883 ]],
      dtype=float32), array([ 0.       ,  0.       , -1.1423283, -0.7206574], dtype=float32), array([[ 0.42212194,  0.51056385, -0.19494092,  0.5596929 ],
       [ 0.6630881 , -0.81352186, -0.54284406, -0.34384912],
       [-0.679854  ,  1.7303594 , -0.69123083, -1.2646518 ],
       [-0.5230028 , -0.49493912, -0.2906325 , -1.0821828 ]],
      dtype=float32), array([ 2.2175443 ,  0.        ,  0.        , -0.20105897], dtype=float32), array([[ 1.1183803 , -0.4979465 ],
       [-0.10562431,  0.6408525 ],
       [-0.95085216,  0.7531491 ],
       [-0.0299833 , -0.5311819 ]], dtype=float32), array([0.        , 0.43596193], dtype=float32)]
1.091776

[array([[ 0.7232691 , -0.71119714, -1.1019875 ],
       [-0.59902847, -0.04133987, -0.66581607],
       [-3.6907198 , -1.0373151 ,  0.7161894 ]], dtype=float32), array([0.24641602, 0.        , 0.24105093], dtype=float32), array([[ 2.8213155 ,  1.3739209 , -2.2457495 ,  1.2269866 ],
       [ 0.5382348 , -0.6186142 ,  0.37896994, -0.03940029],
       [ 2.0223663 ,  0.00814455,  1.3301225 , -0.24395259]],
      dtype=float32), array([-2.2618651,  0.5644712,  0.       ,  0.       ], dtype=float32), array([[-0.66756135, -1.7226349 , -1.0696687 ,  0.9096207 ],
       [ 1.4219472 , -0.0538687 ,  2.6316867 ,  0.90173006],
       [-0.5425164 , -0.14889932, -0.46261418, -0.99677795],
       [-0.7640749 , -0.52612877,  0.71760035,  1.0687084 ]],
      dtype=float32), array([ 4.2905483, -1.3421456,  0.       ,  0.       ], dtype=float32), array([[-1.1813257 , -0.760997  ],
       [-0.83373004, -1.478726  ],
       [-0.20935148,  0.22677486],
       [ 0.66498613,  0.17578936]], dtype=float32), array([ 0.89296305, -0.51379234], dtype=float32)]
1.831695//ERROR!

LogPython: [array([[-0.60732675, -0.5738759 , -0.7850961 ],
       [ 0.08614182,  0.02752614,  0.8611119 ],
       [-1.7519675 ,  0.19976473, -0.33317876]], dtype=float32), array([ 0.     ,  0.     , -1.29761], dtype=float32), array([[-0.6345801 , -0.3528492 ,  0.6196091 ,  0.58516335],
       [ 0.1203931 , -0.5946921 ,  0.17127252,  0.09846866],
       [ 0.01028371,  0.07037288,  0.24500608,  0.6681608 ]],
      dtype=float32), array([ 0.        ,  0.        ,  0.        , -0.06174161], dtype=float32), array([[-0.09066486, -0.64412916, -0.5402684 , -0.60422695],
       [ 0.8016336 ,  0.43953007,  0.76367396, -0.65689003],
       [-0.47518966, -2.0447514 ,  1.8007413 ,  0.7929793 ],
       [ 0.12505603,  0.77144223, -0.69111145, -0.44068536]],
      dtype=float32), array([ 0.       ,  0.       , -0.6968483,  0.       ], dtype=float32), array([[ 1.3607312 ,  0.661075  ],
       [-0.5761926 , -2.8385143 ],
       [-0.94839764,  0.10597229],
       [-0.61552525,  0.32755062]], dtype=float32), array([-0.12133282,  0.26753613], dtype=float32)]
LogPython: 1.024861

[array([[-0.9750678 ,  5.3963623 , -0.8251401 ],
       [ 0.1496036 ,  0.25701213, -0.22063136],
       [ 1.1239886 , -2.8541822 , -1.7969843 ]], dtype=float32), array([ 0.52215093, -1.5375134 ,  2.1152658 ], dtype=float32), array([[-1.2837305 , -0.803744  , -1.076374  , -1.2338065 ],
       [ 1.1259457 ,  0.46652853, -0.0404731 ,  0.2604627 ],
       [ 3.0463178 ,  0.2807852 , -0.18654698,  1.9661112 ]],
      dtype=float32), array([-3.1069057 ,  1.8704689 ,  0.        , -0.49558574], dtype=float32), array([[-0.7129538 ,  0.37950885, -1.31705   , -0.1315845 ],
       [-0.09074821, -0.00405151, -0.09084298,  0.1525343 ],
       [ 0.18819241, -0.384863  , -0.70176774,  2.224744  ],
       [ 1.4073683 ,  0.18206717,  0.2668706 ,  0.48336428]],
      dtype=float32), array([ 1.0277858 ,  0.        ,  0.58688694, -3.9069889 ], dtype=float32), array([[-0.10899949,  1.2334896 ],
       [ 0.0711351 ,  3.3764288 ],
       [-0.5486276 ,  0.1813376 ],
       [-0.48864934,  1.0042766 ]], dtype=float32), array([0.5592283, 0.       ], dtype=float32)]
LogPython: 1.049635

[array([[-0.07359031, -0.1517724 ,  1.2143574 ],
       [-0.88349473, -3.3835025 ,  0.2660873 ],
       [-0.6793344 , -0.25413123,  2.4668038 ]], dtype=float32), array([-0.9397624,  0.       ,  0.       ], dtype=float32), array([[ 0.82896376, -0.756059  ,  0.4132348 ,  0.6314335 ],
       [ 0.8689587 ,  0.89812803,  2.1161397 ,  3.1277092 ],
       [ 0.5585774 , -0.8792733 , -0.79908556,  0.6726501 ]],
      dtype=float32), array([ 0.        ,  0.        , -0.08108609, -0.11468149], dtype=float32), array([[-0.9563019 , -1.27128   ],
       [-0.18336214,  0.42386335],
       [-0.87416244,  1.2749192 ],
       [ 0.9788015 , -0.13335414]], dtype=float32), array([0., 0.], dtype=float32)]
LogPython: 4.000692//ERRORE: CALO DI FRAME TROPPO ELEVATO!

LogPython: [array([[-0.10768628, -0.20328307, -0.62751055],
       [-0.16014752, -0.78866506,  0.28723335],
       [-1.2198101 , -0.51506877,  0.1909492 ]], dtype=float32), array([ 0.        , -0.30109867, -0.59416693], dtype=float32), array([[-0.8110001 ,  0.18423896,  0.22930312, -0.56413454],
       [-2.3815901 , -0.3962044 , -1.5228728 , -0.06355757],
       [ 1.7137591 ,  0.4674492 , -0.2664659 , -1.0864145 ]],
      dtype=float32), array([ 0.        ,  0.        , -0.77249104,  0.        ], dtype=float32), array([[ 0.9994261 ,  0.31893092,  0.4207533 ,  0.4124561 ],
       [-0.8761526 , -0.5308894 , -0.49027443,  0.2735421 ],
       [-0.5392904 , -0.3691815 , -0.20908819,  0.36902723],
       [ 0.2847813 , -1.4925253 , -0.11341196,  0.31637055]],
      dtype=float32), array([0.       , 1.2354609, 0.7498184, 2.2391965], dtype=float32), array([[-0.546885  , -0.9439719 ],
       [-1.7329941 , -0.37230778],
       [-0.15150154,  0.59597206],
       [ 1.1220808 ,  0.02679844]], dtype=float32), array([0.4933596, 0.       ], dtype=float32)]
LogPython: 0.0//bug!